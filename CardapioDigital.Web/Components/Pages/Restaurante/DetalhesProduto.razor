@page "/restaurante/{IdRestaurante:int}/detalhe/{IdProduto:int}"

@using CardapioDigital.Application.Dto.Request
@using CardapioDigital.Application.Dto.Response
@using CardapioDigital.Application.Services.IServices

@inject IGenericoServices<RestauranteRequestDto, RestauranteResponseDto> RestauranteServices
@inject IGenericoServices<ProdutoRequestDto, ProdutoResponseDto> ProdutoServices

<PageTitle>@($"{produto.NomeProduto} - {restaurante.NomeRestaurante}")</PageTitle>

<section>
    <div class="container px-4 px-lg-5 my-5">
        <div class="row gx-4 gx-lg-5 align-items-center">
            <!-- Imagem do Produto -->
            <div class="col-md-6">
                <div class="position-relative">
                    <img class="card-img-top rounded-4 shadow-lg"
                         src="https://dummyimage.com/600x700/dee2e6/6c757d.jpg"
                         alt="Imagem do Produto">
                    @if (produto.PrecoComDesconto is not null)
                    {
                        <div class="badge bg-danger text-white position-absolute" style="top: 1rem; right: 1rem">
                            Promoção
                        </div>
                    }
                </div>
            </div>

            <!-- Detalhes do Produto -->
            <div class="col-md-6">
                <!-- Categoria -->
                <div class="small mb-3 text-uppercase text-primary fw-bold">@produto.CategoriaNome</div>

                <!-- Nome do Produto -->
                <h1 class="display-5 fw-bolder text-dark">@produto.NomeProduto</h1>

                <!-- Preço -->
                <div class="fs-4 mb-4">
                    @if (produto.PrecoComDesconto is not null)
                    {
                        <span class="text-muted text-decoration-line-through">R$ @produto.Preco</span>
                        <span class="ms-3 text-danger fw-bold">R$ @produto.PrecoComDesconto</span>
                    }
                    else
                    {
                        <span class="fw-bold text-dark">R$ @produto.Preco</span>
                    }
                </div>

                <!-- Descrição -->
                <p class="lead text-muted">@produto.DescricaoProduto</p>

                <!-- Ações -->
                <div class="d-flex align-items-center mt-4">
                    <!-- Quantidade -->
                    <div class="d-flex align-items-center">
                        <button class="btn btn-outline-secondary px-2 py-1" type="button">
                            <i class="fa-solid fa-minus"></i>
                        </button>
                        <input class="form-control text-center mx-2" id="inputQuantity" type="number" value="1" style="max-width: 4rem">
                        <button class="btn btn-outline-secondary px-2 py-1" type="button">
                            <i class="fa-solid fa-plus"></i>
                        </button>
                    </div>

                    <!-- Botão de Adicionar -->
                    <button class="btn btn-primary ms-3 px-4 py-2" type="button">
                        <i class="fa-solid fa-cart-shopping me-2"></i> Adicionar à sacola
                    </button>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    [Parameter] public int IdRestaurante { get; set; }

    [Parameter] public int IdProduto { get; set; }

    private ProdutoResponseDto produto = new();
    private RestauranteResponseDto restaurante = new();

    protected override async Task OnInitializedAsync()
    {
        restaurante = await RestauranteServices.GetById(IdRestaurante);
        produto = await ProdutoServices.GetById(IdProduto);
    }

}